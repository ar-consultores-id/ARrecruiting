
package reclutamiento;

import clases.conexion;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * @author Giuliana Carnevalle, Bautista Venier y Alan Sebastian Schimpf
 */

public class GestionUsuariosAdministradores extends javax.swing.JFrame {

    JTable tabla;
    public static String valor = ""; 
    public static String tipopermiso = ""; 
    
    /**
     * Creates new form GestionUsuariosAdministradores
     */
    
    public GestionUsuariosAdministradores() {
        
        initComponents();
        
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setResizable(false);                                        //el usuario no puede modificar las dimensiones del jframeform
        setTitle("Gestion de Usuarios/Administradores");
        setLocationRelativeTo(null);
        
        try {

            Connection cn = conexion.conectar();
            
            PreparedStatement pst1 = cn.prepareStatement("select * from usuarios");
            
            ResultSet rs1 = pst1.executeQuery();
  
            DefaultTableModel dfm = new DefaultTableModel();
            tabla = this.jTable1;
            tabla.setModel(dfm);
            
            dfm.setColumnIdentifiers(new Object[]{"Email","Permiso"});
            
            if (rs1.next()) {
                
                dfm.addRow(new Object[]{rs1.getString("email"),rs1.getString("permiso")});
                
                while(rs1.next()){
                
                    dfm.addRow(new Object[]{rs1.getString("email"),rs1.getString("permiso")});
                          
                } 
                
                cn.close();
                
            }else {
 
                JOptionPane.showMessageDialog(null, "La tabla esta vacia");
                cn.close();
                
            }
            
            cn.close();
            
        } catch (SQLException e) {
            
            System.err.println("Error al cargar la tabla. " + e );
            JOptionPane.showMessageDialog(null, "Error al mostrar la tabla!!. Contacte al administrador");
            
        }
    }
    
    @Override
    public Image getIconImage(){                    //cambiamos el icono del jframeform
    
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/iconoVEC.png"));
        return retValue;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_buscar = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/flechaatras.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Email", "Permiso"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Usuarios/Administradores");

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton4.setText("Modificar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Eliminar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconoPDF.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconoTabla.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton4)
                            .addComponent(jButton5))
                        .addGap(8, 8, 8)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        SuperAdministrador newFrame = new SuperAdministrador();
        newFrame.setVisible(true);                                     //hace visible la vantana
        this.dispose();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        if (!txt_buscar.getText().isEmpty()) {
            
            try {

            Connection cn = conexion.conectar();
            
            PreparedStatement pst1 = cn.prepareStatement("select * from usuarios where email = ?");
            PreparedStatement pst2 = cn.prepareStatement("select * from usuarios where permiso = ?");
            
            pst1.setString(1, txt_buscar.getText().trim().toLowerCase());
            pst2.setString(1, txt_buscar.getText().trim().toLowerCase());
            
            ResultSet rs1 = pst1.executeQuery();
            ResultSet rs2 = pst2.executeQuery();
            
            DefaultTableModel dfm = new DefaultTableModel();
            tabla = this.jTable1;
            tabla.setModel(dfm);
            
            dfm.setColumnIdentifiers(new Object[]{"Email","Permiso"});
            
            if (rs1.next()) {
                
                dfm.addRow(new Object[]{rs1.getString("email"),rs1.getString("permiso")});
                
                while(rs1.next()){
                
                    dfm.addRow(new Object[]{rs1.getString("email"),rs1.getString("permiso")});
                          
                } 
                
                cn.close();
                
            }else if(rs2.next()){
            
                dfm.addRow(new Object[]{rs2.getString("email"),rs2.getString("permiso")});
                
                while(rs2.next()){
                
                    dfm.addRow(new Object[]{rs2.getString("email"),rs2.getString("permiso")});
                          
                }
                
                cn.close();
    
            }else {
 
                JOptionPane.showMessageDialog(null, "No se encontraron resultados");
                cn.close();
                
            }
            
            } catch (SQLException e) {
            
                System.err.println("Error con el boton buscar candidato. " + e );
                JOptionPane.showMessageDialog(null, "Error al realizar la busqueda!!. Contacte al administrador");
            
            }
            
        } else {
            
            JOptionPane.showMessageDialog(null, "Debe ingresar el dato a buscar");
            
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        
        if (jTable1.getSelectedColumn() == 0) {
            
            EliminarUsuario newFrame = new EliminarUsuario();
            newFrame.setVisible(true);                                     //hace visible la vantana
            this.dispose();
            
        } else {
            
            JOptionPane.showMessageDialog(null, "Debe seleccionar un email");
            
        }
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        AgregarUsuario newFrame = new AgregarUsuario();
        newFrame.setVisible(true);                                     //hace visible la vantana
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        if (jTable1.getSelectedColumn() == 0) {
            
            ModificarUsuario newFrame = new ModificarUsuario();
            newFrame.setVisible(true);                                     //hace visible la vantana
            this.dispose();
            
        } else {
            
            JOptionPane.showMessageDialog(null, "Debe seleccionar un email");
            
        }  
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        int fila = jTable1.getSelectedRow();              //toma el valor de la fila seleccionada
        int col = jTable1.getSelectedColumn();          //toma el valor de la celda seleccionada
        
        String valorCelda = (String) jTable1.getValueAt(fila,col);
        
        if (col == 0) {
            
            valor = valorCelda;
            tipopermiso = (String) jTable1.getValueAt(fila,1);
            
        } else {
            
            JOptionPane.showMessageDialog(null, "Debe seleccionar un email");
            
        }  
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        Document documento = new Document();

        try {

            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/Desktop/Usuarios.pdf"));
            
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.add("Formato creado por Giuliana Carnevalle, Bautista Venier y Alan Sebastian Schimpf © \n\n");
            parrafo.setFont(FontFactory.getFont("Tahoma", 18, Font.BOLD, BaseColor.DARK_GRAY));
            parrafo.add("Usuarios \n\n");

            documento.open();
            documento.add(parrafo);                                   //agrego el parrafo al documento

            PdfPTable tabla = new PdfPTable(2);
            
            tabla.addCell("Email");
            tabla.addCell("Permiso");
            tabla.addCell(" ");
            tabla.addCell(" ");

            try {

                Class.forName("oracle.jdbc.driver.OracleDriver");
                String url = "";
                String usuario = "system";
                String pass = "admin";
            
                Connection cn = DriverManager.getConnection(url, usuario, pass);
                
                PreparedStatement pst = cn.prepareStatement("select * from usuarios");
                ResultSet rs = pst.executeQuery();
                
                if(rs.next()){
                
                    do {                        
                        
                        tabla.addCell(rs.getString(2));
                        tabla.addCell(rs.getString(4));
                        
                    } while (rs.next());
                    
                    documento.add(tabla);
                
                }else{
                
                    JOptionPane.showMessageDialog(null, "La lista esta vacia");
                
                }
                
            } catch (DocumentException | SQLException e) {
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Candidatos.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            documento.close();
            JOptionPane.showMessageDialog(null, "Reporte creado");

        } catch (HeadlessException e) {
            
        } catch (FileNotFoundException | DocumentException ex) {
            Logger.getLogger(AgregarCandidato.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        try {
                            
            txt_buscar.setText("");

            Connection cn = conexion.conectar();
            
            PreparedStatement pst1 = cn.prepareStatement("select * from usuarios");
            
            ResultSet rs1 = pst1.executeQuery();
  
            DefaultTableModel dfm = new DefaultTableModel();
            tabla = this.jTable1;
            tabla.setModel(dfm);
            
            dfm.setColumnIdentifiers(new Object[]{"Email","Permiso"});
            
            if (rs1.next()) {
                
                dfm.addRow(new Object[]{rs1.getString("Email"),rs1.getString("Permiso")});
                
                while(rs1.next()){
                
                    dfm.addRow(new Object[]{rs1.getString("Email"),rs1.getString("Permiso")});
                          
                } 
                
                cn.close();
                
            }else {
 
                JOptionPane.showMessageDialog(null, "La tabla esta vacia");
                cn.close();
                
            }
            
        } catch (SQLException e) {
            
            System.err.println("Error al cargar la tabla. " + e );
            JOptionPane.showMessageDialog(null, "Error al mostrar la tabla!!. Contacte al administrador");
            
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionUsuariosAdministradores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionUsuariosAdministradores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionUsuariosAdministradores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionUsuariosAdministradores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GestionUsuariosAdministradores().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_buscar;
    // End of variables declaration//GEN-END:variables
}
